<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <Layers />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' inline='true' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airline_Delay_Cause jan 2017 - jul 2022' name='excel-direct.00sptql15hsi7f10vnpaj1s0u8sd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/data analyst/Projek Data/Airline_Delay_Cause/Airline_Delay_Cause jan 2017 - jul 2022.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.00sptql15hsi7f10vnpaj1s0u8sd' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_delay' ordinal='9' />
            <column datatype='integer' name='carrier_delay' ordinal='10' />
            <column datatype='integer' name='weather_delay' ordinal='11' />
            <column datatype='integer' name='nas_delay' ordinal='12' />
            <column datatype='integer' name='security_delay' ordinal='13' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_778278324667826176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <column caption='Airline_Delay_Cause' datatype='table' name='[__tableau_internal_object_id__].[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_0lk5wj10v7tk5u15s9fpc0598y7j.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/26/2025 12:36:04 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1052</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1015</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>8</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>9</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11214</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6120</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2510</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3547</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>495</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Airline_Delay_Cause</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5581</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_778278324667826176' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Airline_Delay_Cause' id='Airline!Delay!Cause_6F628E53C8C2458CBA25D29ACF46E563'>
            <properties context=''>
              <relation connection='excel-direct.00sptql15hsi7f10vnpaj1s0u8sd' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_delay' ordinal='9' />
                  <column datatype='integer' name='carrier_delay' ordinal='10' />
                  <column datatype='integer' name='weather_delay' ordinal='11' />
                  <column datatype='integer' name='nas_delay' ordinal='12' />
                  <column datatype='integer' name='security_delay' ordinal='13' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
      <datasources>
        <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
      </datasources>
      <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_F1FA0E7F96AE41CCBE1E95A221F861F1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Airline Delay (2017 - 2022)' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Airline Delay (2017 - 2022)' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_71EE985386084F6D833D22D86E183B75]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Airline Delay (2017 - 2022)' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Airline Delay (2017 - 2022)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_8EBE9C253A354F5F91C969A3BC8ACFC5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Airline Delay (2017 - 2022)' type='sheet' worksheet='Carrier Delay Percentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Airline Delay (2017 - 2022)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
          </datasources>
          <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_F1FA0E7F96AE41CCBE1E95A221F861F1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier:nk]' />
              <tooltip column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]</rows>
        <cols>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{DB72F785-62FC-4486-AD74-2CF100B5DA44}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
          </datasources>
          <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
            <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_778278324667826176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_778278324667826176]' derivation='Avg' name='[avg:Calculation_778278324667826176:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_71EE985386084F6D833D22D86E183B75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_F1FA0E7F96AE41CCBE1E95A221F861F1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[avg:Calculation_778278324667826176:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[avg:Calculation_778278324667826176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[avg:Calculation_778278324667826176:qk]</rows>
        <cols>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D3E8E5AA-831A-4499-AF44-9A5F060B4767}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_71EE985386084F6D833D22D86E183B75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Latitude (generated)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Longitude (generated)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Longitude (generated)]' field-type='quantitative' max='32676724.818840362' min='25763913.76624459' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Latitude (generated)]' field-type='quantitative' max='7216614.4429603647' min='1960449.570808745' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes customization-axis='layer'>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' />
            </encodings>
          </pane>
          <pane generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' />
              <color column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]' />
              <geometry column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' />
              <size column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]' />
              <lod column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' />
              <tooltip column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[attr:airport_name:nk]' />
              <lod column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0828728675842285' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Latitude (generated)]</rows>
        <cols>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{427DFA3E-FAE6-44C3-8D02-72C89D6232A6}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
          </datasources>
          <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_71EE985386084F6D833D22D86E183B75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_F1FA0E7F96AE41CCBE1E95A221F861F1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[:Measure Names]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (City,State)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Action (Carrier)]</column>
            <column>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='20' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[:Measure Names]' value='bold' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A57B8626-933B-4505-B6D5-522C580AD4CA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='US Airline Delay (2017 - 2022)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Airline_Delay_Cause (Airline_Delay_Cause jan 2017 - jul 2022)' name='federated.1jh9hyk130mvzr13dfzt21ljawu8' />
      </datasources>
      <datasource-dependencies datasource='federated.1jh9hyk130mvzr13dfzt21ljawu8'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97886' id='22' param='vert' type-v2='layout-flow' w='99018' x='491' y='1057'>
            <zone h='6473' id='23' type-v2='title' w='99018' x='491' y='1057'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91413' id='20' type-v2='layout-basic' w='99018' x='491' y='7530'>
              <zone h='87467' id='17' param='horz' type-v2='layout-flow' w='99018' x='491' y='11476'>
                <zone h='87467' id='15' type-v2='layout-basic' w='99018' x='491' y='11476'>
                  <zone h='78497' id='7' param='horz' type-v2='layout-flow' w='99018' x='491' y='20446'>
                    <zone h='78497' id='5' type-v2='layout-basic' w='99018' x='491' y='20446'>
                      <zone h='78497' id='3' name='Map' w='49509' x='491' y='20446'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='39248' id='11' name='Carrier' w='49509' x='50000' y='59695'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='39249' id='13' name='Carrier Delay Percentage' w='49509' x='50000' y='20446'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='8970' id='14' name='Total Delay' show-title='false' w='99018' x='491' y='11476'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3946' id='19' type-v2='layout-flow' w='99018' x='491' y='7530'>
                <zone h='3946' id='18' name='Carrier Delay Percentage' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99018' x='491' y='7530'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97886' id='26' param='vert' type-v2='layout-flow' w='99018' x='491' y='1057'>
                <zone h='6473' id='23' type-v2='title' w='99018' x='491' y='1057'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='64' h='8970' id='14' is-fixed='true' name='Total Delay' show-title='false' w='99018' x='491' y='11476'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='78497' id='3' is-fixed='true' name='Map' w='49509' x='491' y='20446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3946' id='18' name='Carrier Delay Percentage' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99018' x='491' y='7530'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39249' id='13' is-fixed='true' name='Carrier Delay Percentage' w='49509' x='50000' y='20446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39248' id='11' is-fixed='true' name='Carrier' w='49509' x='50000' y='59695'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4EFE85AF-39AB-4073-B17F-E9BEA88F4B59}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:airport_name:nk]</field>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{42788F5A-2975-4E61-BE2D-7B420CA860EA}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier:nk]</field>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CBDC910-9EBA-4096-BE66-6FDA85A09122}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F63C67C-65C1-4C95-8F3D-0DB28AF8D858}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1jh9hyk130mvzr13dfzt21ljawu8].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFF2EB12-EC33-4F8C-BE29-C52A828F8560}' />
    </window>
    <window class='dashboard' maximized='true' name='US Airline Delay (2017 - 2022)'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='23' />
      <device-preview visible='true' />
      <simple-id uuid='{23E3BCFD-D909-4E9D-9B8B-DD6B5246EA75}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXRc133n+Xm1ryhUAQWgsBIrCYIkCHAxJUq0aGuXncixFXmc7qQ7yUkm
      kz5npntyTp92Ot2ekzndp7NMes4ZZzq2x5PxeGxJsU3JsiSKpLmIi2iCAIiFxL5vVYUq1L5X
      vTd/QCyJIkARNCiCqvs5B3+gUPXqvof3vff+fvd7f09SFEVBIChQVA+6AQLBg+S+CiCXy93P
      wwsEvzZiBBAUNEIAgoJGCEBQ0AgBCAoaIQBBQSMEIChohAAEBY0QgKCgEQIQFDRCAIKCZsMC
      yCSjDA4MEoqnAAguLzEwMIA/FGdi5DoDw+MIf53gYUGz0Q9MT8/StL2ZyYlpbK3bmV+YR20o
      xmLWM7gwT31rJwCKouR/BIKtyoYFIKNCp9WiklZ/b2vfTzYZYGhkhiNHn2akp5dYeQlGRUGW
      5c1ur0CwqUgb3Q8QC3gZmZrHVduIQS2TjoVw+wKU19SxsjBPUlGzd89OVJJELpdDrVbfr7YL
      BL82GxbARhACEGx1RBZIUNAIAQgKGiEAQUEjBCAoaIQABAWNEICgoBECEBQ0QgCCgkYIQFDQ
      bFgAiqIQj8eRP1hAzmUzRKNR0tkcmXSKVDqz6Y0UCO4XGzbDLc2ME0xmUWstbG+sYWJsBI3B
      TGlZOeM3BsmioXN/BxpJuh/tFQg2lQ0LIJzKsXNHK8MjwwDYi20sebzI6hxmaw1FUoSYomCR
      ZXK5nLBDC7Y0GxZAkV7N0MgwksZENBpFQcJsMZFJ60lE5glLGjokCbVqdXYlzHCCrcyG3aCK
      IhOPxTGazWQzGdQqiXgyhdlsJpdOkUONQa8FhBtUsPURdmhBQSPSoIKCRghAUNAIAQgKGiEA
      QUEjBCAoaIQABAWNEICgoBECuM8oisKbb77JiRMniEaj/MVf/AXZbBYAr9fLX/7lX3Lt2jW+
      +93vMjo6ysTExANucWGxYSuEYGPMzMxQUVFBPB6nq6uLAwcOAKvC6OvrY+/evSiKgiRJXL58
      GUmSqKysxGg0PuCWFwYbHgFy6QTDN4aIJW/anhXc87PEUlmmx4dFcdyPkU6nmZubo7+/H1mW
      6e/vZ2pqimg0Sjabpbe3l/Lyctra2qivr8dqtZJKpR50swuGDVshxoev46qrZ3p6nrbWFjLx
      IFeuDtC4u5Ox/ss0t3VSXmpHQlghbpLL5UgkElgsFiKRCEajkVgshs1mIxwOU1RURDgcxmQy
      sbCwQG1tLZKwk38qbHgKlJPUmAxG1KpV3fRd60eR07i9fj536DFG+wexOjowKIqwQ38Eg8FA
      NpvNT20MRiPpdAaTyUQ2m8VkMgFQVVVFLpd7kE0tKDY8AoR9S4zNLlFeVY9ZB3a7neDyEjm9
      Fc/0JLGMQmfnHtSiOO4d+esfX8Rq0vPf/+b+B92Ugmbj+wFKXewrdd3yWrFz9feSPXs2p1Wf
      ceLJDMOzfrbXljzophQ8Igv0CSwuLlJaWkomkyGXy1FUVEQsFmNgYACDwUBNTQ2ZTAabzYZK
      pUKv19/xeIqi8Nb7o7Q3lTPvDeczQIIHg1gHuAOxWIwf/ehH+P1+zpw5w40bNwDQ6/U0NTUx
      MTFBT08PPT09XL58mXQ6/YnH9AZjXByc418+txdJkgjFRMbnQSIEcAeOHTtGSUkJbrebgwcP
      5uMZjUZDNBqltbUVg8GA1+tlenqaU6dO3fGpOIqi8I/v9PG1z+/EatJTV25jcjHwaZ2OYA0e
      iinQzZVTgEwmg9FoRFEUYrEYiqJgNBrJZrPo9XpkWd60wPuFF16gt7cXi8XCe++9h9vtpqam
      BovFwvj4OEePHs2/N5VKEYlE7ni8a+Me4skMj+6qAWBXQxmDU146W1x3/Jzg/rHlt0QqisJr
      r72Gy+ViZWWFTCbDF77wBWw2G11dXXR1dbFz507cbjd79uzB6XTicm29GyqdyfHn3zvN//Di
      fupddgDmvWG+/XoX//mPvrjh412+fDn/EMKFhQWee+45zGYzb731Fmq1moaGBq5du8bRo0eJ
      RqM0NDRs9il9JtjyU6DBwUHq6+vJZDIUFxfz2GOP4fF40Gg07N+/n9bWVmw2G8lkku7ubk6d
      OnVXc/H7QTYn4w/H1/zbO78aY3ttCdsqivOvlTvMhGMpEqmNFRMLBAKEw2FSqRSJRIJnnnkm
      H5+k02mSySTLy8tYrVbOnj1Lb28vmYwoWLYWW14ARqMRr9fL3NwcwWCQnp4eiouLCYfDdHd3
      09nZyYEDB9i5cydNTU0YDIYHtpD0k3M3+JO/fYufvTfE2LyfdGa1Hf5wnNM907x8tO2WjI9W
      o6beVczEBuOAiYkJIpEIAwMDJJNJ/H5/foHtyJEjVFdXU1ZWll94KysrIxgMbt6JfobY8lMg
      AFmWyWQyyLJMLBbDbreTSqWQJAmDwYAkSSQSCbRaLcFgkNLS0k1o/UbbqPCffnienduc6DRq
      esaW8AZiNLjszC+HeXJ/A88far7tc8d/NU4kkealJ3Zu6PsymQzLy8vIsszExASPPPIIfr8f
      t9tNJBLhscceY2FhAbvdTk9PD4899hgq1Zbv7z51HgoBrEU6k0NBQa/dGnH8laEFftk9xb/9
      ncOoPujlU+ksvWNufvBuH//TS4doqbl94Wt+Ocz33+7lP/ze5z/tJgu4hyzQR/Vyczj/uIY+
      jYWdv/7xRZAkvvnPHrvj9w0NDTE2NsbevXsZGhpCURSeeeYZcrkc77zzDlarldLSUiKRCLW1
      tRQVFWG1WjfUlmxO5p/O3uBPXzyQv/kB9DoNh9qqOdBama+U93GqSq2shBMkUhmMHxQUu1fO
      9E4TT6Z5/lDzZ3pxbb0+W5KkfGLg4+e/3vXYsAC885PM+0JYi8tpqa9CkbOc/+VJmvc/zuJo
      Pyn0fO5gJ+r7+A/I5WR84QSJZAb3ShRXyfo3bGNjI5FIBLfbTTgcRqVSkc1micdXg9VAIEA2
      m0VRFC5cuEBzczMdHR0buoFOdk3QXOWgrsLG+fPnOXz4MH19fTQ3N2OxWEglk1y6dIlt27YR
      DocpKytDlmVqalbToZWlVua8YcqLNAQCAWpra/F6vej1eux2O4qisLS0hMlkQpIkVCoVWq0W
      rVZ7ywh77to0C8sRntrfiE772fVgJRIJzp07x/LyMuXl5cTjcVwuF4cOHeIXv/gFarWampoa
      uru76ejoIJPJsH//2p6rdQUQD3p4/cQFHtm7m/LGFkwfXM9APMO+js58cdyFmUmq65uQlCgW
      Wz2VUoTofS6Oe23cQ7ndxON7avn716/y7//54XV72Gw2i0qlwufzoVKpUKlUxONxwuEwer2e
      dDpNVVUVV69exWw2EwwGSaVSaDR31zdE4mnevjzGf/wXR+jv72dgYIA9e/YwMzNDSUkJBoOB
      dDrNgQMHOHnyJMXFxczNzRGPx3niiSdwOp20VDsYmHCjuDT4fD5u3LhBKpUiHo/z0ksvEY/H
      mZubY2pqCovFgizL2Gw2Pve5z+WvbzCaZDkYo6XGwemeSZ7cV79p13urodPpKCoqwuv1olar
      8/FfNpvF6XQyMzODz+dDURSuXLmCVqvFbrdTV1d327HWjYoi/kWSqTT9fb0kPpJBM2skpmdn
      UVQGkskkChLuhRmWlhMk4m7csTgmSUKtVqNWq9FoNJv6I6lU/PzSKF95vJVHd9VS7yrmJ+dG
      1v2u0dFRlpaWaG5uxmg0otPpkGUZo9FIMpnEZrPR3NzMgQMHaG1tRavVotfr77o9b14a42hH
      PTaznvPnz+P3+wkGg2zbti3fJp1Ox9mzZ3nyySfRarXEYjGKiooYHBxEo9HQuq2M69M+HA4H
      g4ODNDY2EgwGURQFjUaDzWYDoKWlBa1Wi9/vZ2xsjOPHj+fb8auhRR7bU8cfvNDJL94fI5rM
      bvq13yo/yWQSh8OBwWAgEAjQ0dGB3+8nkUhQVFSU31j0+OOP09bWlh8l1jqW+lvf+ta31hKA
      Vm8iFlrBXFKJy+nAoFudnxbZHeQyGaqqKslmMpSWVeCqqqa8xIHdZsFW4sSk1wGrc7XNzjwM
      TS8zNOPjt460olJJtNY5efX0IOUOC+UOy23vr6ioYPv27TgcDpqbm2lpacFoNGIymdi+fTsN
      DQ2oVCpKS0txOp3U1dXd9fTHG4jx2tnr/NFv7MOg13Hw4EFMJhMul4vz588TDocxGo3Mzs7i
      9/sB2LNnDyaTKb8hpqqqCqNOw+sXRqi1ptFqtXi9XpQP9lOUlZXhdru5cOEClZWVPPLII8Ri
      MbRaLYqisGPHDrI5me/8vJvfeWo3ZXYzKkni7LVpDrZWARAKhTh16hSjo6OEQiHee+890uk0
      lZWVvP3224yPj5PL5Th+/DglJSXMzs5SVla2ef+0TUatVhMOh2ltbWX37t1EIhE6OjpIpVL5
      zqK1tRW9Xk9DQ0Peu7XW/3XdLJB7rIvu2QwZ3yQhycLXv/oi+g1OKzc7C6QoCn/9yiWe3Ndw
      i31g1hPib169xF/+/lFsFsMnHieVyfL25XEebateUzR325b//Se/Ym9TBU90bLunY3yU//D9
      M/zeM3uocVrzw/nN+T6spj0lScrf+Df/bWq1mqsji7zXN8O/fulQPhD88++d5uWjbbQ3VQBw
      +vRpEokEzz//PGfOnOHw4cPo9XreffddotEoZWVlhEIh/H4/BoOBZ599Nn8zfZZZt3suKq0i
      EXCTUVvZu7MF9RZIKsx5wwQiSdqbym95vbbcxguHWvj717sIRpOfeJwlX5T/551rnOmdvqd2
      KIrC2WszLAdjPLan9p6O8XF21ZcxNh9Ap9Plb3SNRoNKpUJWVh2oN/+mUqnyU0xFUXjr0igv
      fCTzI0kSf/B8Bz88MUAmmyMSiXDo0CEikQiRSASNRpO3bbe1tbFjxw5sNhsWiwWn00ltbS0+
      n29TzuvT5Ny1af63194ndwdD4sdZVwCZdAqfz0M0FqGxZSeaB7yGoigKx84P88IjzWsGvF/o
      3MaMJ8S3j3V94nFeP3+DRkuYn759hskFH6dPn2Z5eRkAj8fDiRMnCAaDnD9/nlQqxcLCwi2f
      H53z8+1jV2isdKBRb86F2d1QztDM8m2v+8Nx/uhv3uRE19rlUiaXAuQU5bY1hoZKOzu3lfLG
      hRE0Gg0XL17k4MGDyLLMgQMHkGWZhYUFUqkUwWAwL4Snn34aYM2A8ZMYHBzkZz/7GV1dXRw7
      doxz584Bq9est7eXH/zgBxw/fpw33niDK1euEIvFNvwdd2JyMcDFgbmPFGz4ZNb97yWiIWrr
      mzBq1aTuXlD3DfdKjGl3kIM7qtb8u1aj5l995SDulegdLcYDk16WQ3H+47/673isycSf/afv
      kJPlW7I+7e3tvPHGG3lzWV9fH9lsFllWePvyGN95s4c//+eP8/Uv7tq082uudjC1FCSb+/Bi
      z3hC/M0r79NU5eAXl0a5MX2rQBRF4Z3L4zy9v3HNvPdvf6GN8/2zBGJZnnrqKRoaGiguLsZo
      NKJSqaiqqqKxsZHDhw+jVqupqKhAo9HwyCOP3HUW7KNUV1cTDAZRqVTMz8+ztLRENpslFosR
      iUQoLS1FURSCwSCDg4OcP39+U7OEU0tBHt1Vw7H3hu/6M+sGwZJKTV3TDqrKHFhttnsaATYz
      CH719CD7WyppqS0hk8kQCATQ6/UkEglSqRQ6nY4yuxmnRc3/eewKh9qqUXIZNBoNuVwOlUpF
      IpXh7157nz958SCzk6NkUwky6SQrip1scJ7m5maCwSB9fX08/fTTXL16lVgsRllZGRPT87ze
      tYAvlODfvPwIdeU2YtFw/hwDgUDelgGrm2k0Gk0+3ZrJZO4YD6lUEpdvzLO9thSzQcvpnil+
      8G4fv/PUbl56Yie76sv49rErGPVa6sptSJJEMJri2PkhfvfZ9jVHIp1GjVaj4u9fv8r+7S6s
      pjvvVvt18Xq91NTUMDU1hdFoxGq1UlFRQTgcZmZmhp6eHr7+9a8TDoexWq0oikJj463i9Xg8
      nD17ltHRUa5fv8709DQulwuNRsMrr7xCT08PsViMU6dOUVRURCgUwm63E46neOdX4/y7f/YY
      PzzRz85tzruKB9cVwDuvfZfe8WUWZmep39624QAYNk8AoViSV09f5w9e6ECrUTM/P8/k5CSj
      o6N0d3czMTFBXV0dGo2GhekxFieHeO3dy6gSPiKRCHa7Hb1ez+vnhymxmdjXVMr169dRFIUv
      Pn6IH79xkrq6OuxmHV1dXajVaux2O3a7ndptjbxx4gKnh8J8fv8OfvfZdgw6DalUisHBQS5d
      uoTb7cbv9zM/P09dXR2JRIK/+7u/w26309XVRSQSYWVl5RNt2gu+CMvBGMevTLDoi/BnX3+U
      bRV2JEnCZjFwsLWK/+9kPyuRJDtqS3jnV+PUltnY01i+7jENOg2Xr88z5w1zYMf6K9KbQSqV
      wufz8eijj1JWVobdbs8LYefOnbS3t2M2m3E6nVRWVlJSUkJRUdEtxzAajYyPj+czdcFgkKqq
      KkwmE4ODg6RSKUpLSwkGgywsLDA/P8+OHTvoGnZj1GvZv6MSe5GRNy4Mc3jXJ5eXWVcAlVU1
      SJIKZ3kFrvLyBzYCpLM5fvhuP63bnPl/tF6v5/Lly9TW1uLxeEin07S3t6PX6/H5fMSCyyQx
      MLewiJyKMjc3R1FpJa+cvsGffuUAVrOJlpYWWltbcTqdfP7R/fzovSme2L+dA53ttLS0YDJb
      8MfhtffG6V3M8c1/8SRH2uvyVgeNRsPCwgI+n4/S0lIWFxdxuVy4XC5OnTqF0+mkqKiI+fl5
      3G43y8vLmEwmSkrW3wg/POPjR6cG+GJnPb/7bPtt1gijXssjbdX8snuKqyNLdA0v8Idf6ryj
      hcJq0vPUgUb6Jzy8f32e/dtd900EZrMZl8uFWq3GYrFQXFyMXq9HrVbnjYs3900bDIY1LSd+
      vx+Xy8XQ0BAtLS2YzWaSySRFRUVMTExQW1tLdXV1/jtuTuV+dn6MZw824Sgy4iqxcO7aDDaL
      AVfJnbN86wogsDDKUlyPw2rA7ijhXmK9zRDA5GKAb79+lS8fbqGqdLW3mJmZwWAw5OeYZrMZ
      h8NBJpPB4/GQSCT4+m99iVdO9rGtugyzQc2JwSBffaItvxnlo5iNOsqKzfzjO9dorHJwaXCO
      773Vy9RSkC901vPU/kY6ml239CbRaBSPx0MoFCKbzVJdXZ0vcqVSqRgZGaGmpob6+nqKi4tJ
      JBIUFxdTXr5+b61Rq3AWm3nx8R3r3qRajZoDrVWc6JrAF0rcVRyiUkl0tri4Mb3MuWsz7N9e
      iXqTgvdPIhxL8TevXKLEZqKs2PyJ75ckibGxMQ4ePIhGoyGTybBjxw6i0SgVFRXodDqampqw
      2Ww0NjaiVqsx2xz8/OIIX39yFypJQiVJbHPZ+f5bvXx+77Y7nuu66wAr86O8cep9zBYrz//G
      b2HRbfzkN2MdQJYVZjxBasps+XluKpUiHA5jt9tJJpPkcjnMZjOyLBONRtFoNFitVoamPfz9
      sasc2VPFpCfGv/3GYWB1fn5zXp7L5TAYDGg0Gv7ie6cZnfXyG4+38UhrBfVVTmQ5t2ZAKMty
      Pg4xGAwEg0HsdjvpdBqj0Zif82cyGXQ6HaFQKC+OzSAQSeAPJ2iqctz1Z3KyzA9PDLAcjPE/
      fu1zaDX31y+kKAoXBmb5v97qpdhi4M9efpTqsqI7vj+TlTfsY7o0OEfP6BJ/+pUDt3RS/+2N
      q9SUFfHCIy3rfnbdESAVDzI4vsDndm3HXFqBYZNigFwux8jICJIkodfrGR4exmq15m0Lc3Nz
      mEwm5ufnsdvtRKMRKkqLUak+PDGNRoPZbEalUqHT6fJDq1qtxmg0otfrkSQJp91CMJbilTND
      /OuXDuEoMuU30nR3d6NWqzl//jySJFFRUcH0jSvUmFM0VxgZ7OtGrVYRCoXW3F8gSRImkwmd
      TodKpcJkMuVNakB+2NdoNLfsWwCIx+OcPHmSkZHVFOWFCxcoLi7O7z2+cuUKOp2OkydP4nA4
      mJqaum3kMOq1qOQU4+Pjq0FgOMzi4iIOx6ogvF4vfr8fRVGIRCKrHZGi0NFcyZw3zLtXJti/
      o3LT0rhrMbUU5Ptv9/Ktf/kELdWl/B8/u0KxxUC1s+i2uXkuJ/PulQn+6scX88I0aDV3JYZ/
      OnODI+11uEpvnVI1VTv43ls9HNpZve40cV0BxEPL9PRdx+MLsau9PR8Ey7kM4+MTmIuK0ahV
      xEIrjE3OYLUV456dYNYToKzEnl+R/LgAEokEiUSCS5cu4fV6MZvNWK3W/Ib2yclJZmZmCAQC
      uN1u0uk0Tqfznu29pTYTeq2GQzur0WrUGAwGxsbGkGWZI0eO4Ha7OXToECqVihWfh88/fpiR
      kRFisRhut5v5+Xmqq6vzpQs3A61Wy/LyMtFoNB/w2Ww27HZ7vmL0mTNnaGhooKuri0AgsGqZ
      +FjFaJ/PRyqVYmhoiOvXr1NRUYHD4SCRSHD69GkqKioYGBjIm8NuTiF2bnPiXony1vtjfK61
      6o5ThFQqxdmzZ9FqtQQCAbq7u6mpqUGtVjM0NMTVq1dxOp309/dTXl6O3+/HbF7d6vlXP77I
      H//G6h7oCoeFA61V/L8n+lnwRdjVUIZKksjmZLpHl/j2sSu4AzFaakuRJIn3+mY5dn6Y9/pm
      ONE1QTYn01x9e/yU+8CK/vIXdt02ohl0GnI5hdM9U3Q0u9YU+7oCSCeiNO5+lPpyK6ZiJ7oP
      jj05Noyzqprp6TnKnCVkZRm7Rc3kbIAV/xL1DU0YDHok1h4BdDod/f39JBKJ/GrjTQvwzQzA
      3r176e/vx+fz4fF4sNlsFBcXcy9YTXramyryF8fn85HNZvF6vZSUlJDL5XC5XIRCIcbGxlha
      WuLQoUNYrVaKi4tJJpO4XK7bshW/DqlUioqKCgYHBzEYDDz55JMMDAzQ2NiI2Wymq6uL3bt3
      5z0/9fX1hEKhNbNIp0+fprq6muHhYTweD9u3b8ftdjM2Nsbs7CwOh4PFxUX8fj9zc3Ps2LED
      lUpFa10p3mCcX1wa4WBr1bojwU3P0Llz59ixYwc6nY6pqSmqqqr45S9/SUdHB3NzcyQSCWZm
      ZkgkEpQ6y/jb1y7zxc76vB8JwGTQcnh3DX1jHn5xaZRIIs333+4lFEvx8hd38VtHWjmwo5Ld
      DWV8fm8dzx1qYk9jOYu+CD2jbh7fU3vbTT4w5SUQSXKkfe2FO7NRyz/8vIdrY0vIskKx1YDJ
      8OFosK4AEiEPZy92szC/QPPOtrwAvP4VqlyVBFaWKS0tRSWnuTEySZG9lJrKcqaHR7FVulB9
      xA4ty3L+Z3l5mfHxcaLRaH7hxG63k8vlcLvdOBwOqquryWaz1NTUMDMzQ0NDA1arFVmWWVxc
      5L333mNycjLfu900bv30pz+lt7eXaDTK2bNn8/bmm5+VZRmtVksul2PXrl2YTCYqKla9Mtls
      lsbGRkpLSyktLcVqtVJbW5s3yX38PH6dn1QqxaVLl6itraWzs5P333+fffv2sby8TCwWQ61W
      s3fvXnQ6Hbt372ZycpLdu3ev2iI+cpyBgQFSqRQqlWrVmaso+WcLXL9+HZ1Ox1NPPUU0GsVk
      MpFMJmlpacl7ibbXOPAG47x5cZT92yuQ4La2qtVqLl68SC6Xo7KykosXL7Jt2zaKi4txOp0M
      DQ0hSRLT09P4/X6y2SzHLk1S7nTwm4dbbrtuKgn2NJah1WpY8kf5xhfbeGJvHXaL/rbvVhQF
      k17D/u0uEqkMv+yZZF9zxS3HfOPCCPu3u3A5zGtea7NeQ2eLi71NFYzNr/DK6etc6J8hnkxT
      VWpZPwgOeWYJKhaqncW3DJFBzzwTCx5KK+ooMqpJxUIsr4QwFtlJh4JEUln2HehAc5+K42az
      WY4fP47FYiGTyRAOh/NlUl599VUSiQQNDQ243W5yudUA9qtf/eo9rWwWAoqi8LP3hhmZ8/Fn
      Lz9625zb7XZz9epVZFmmrKwMj8dDfX09paWljIyM4Ha7eeaZZ5icnMRgsvJ/v/pzLFW7+fe/
      /9SGg+yJiQlu3LhBbW0tMzMzGI1GnnjiifyU8Q//3X/l4L529tUXraZILUX8rz/q4j//8Rex
      GHUEg0F8Ph/19fXMzs4CUF9fjyzLTE1N5eOjaXeI94eWmPFE1t8Qk01F+PErP6GxsYHnvvxi
      PgtUXF7NvvLqD99ot1OR/3VzjGF3IhQKcfToUd588828wWthYQGj0YjBYKC2thaXy0U2m/1w
      BTiR2PA2x0JBkiS+cmQHx84N8bevXuJ//vqj6D5y41ZUVPClL31pzc9WVlYCq1tC1UVV/OTi
      CBPZGv7rlw/dU4apsrKSwcHBfNGzmwkEWZbp7u7md184yNtXptDICZaXl8mozJTZSzB/MKUJ
      BAIEg0EuXLhAMBhk3759ACSTSVKpFO+++y7FxcVks1l2O22U2V3rT4E0Gh3heJIDe9ux2m1o
      7iEGvR/7AbLZLJcvX+bw4cOk02nC4TBtbW0Eg0FsNhuyLNPa2kpR0WovkUgk7snYVUhIkkRr
      XSnLoTg/ON6HrEBJkfGOC2yL/giznhAnuib4x+PXCESTPHOwiacPNtFYZb9lb/TdcnN3Xl9f
      H0899RShUAij0UgikWBkZIThoRv8ye/9Nt997RSushISWYnOtiaaqlezdLlcjtOnT9PR0UEs
      FuPatWvs3r0bnU7H0NAQ8Xgck8mE2+3G5/NhlhLrT4EWR65w9sYylfosO4/+JmX38Mgq8XyA
      h49pd5DzfTP0TXgoKTJyeHctJUVGiq0GFpYjTC8FmVsO0T2yhEGn4aUndvLIrhqK78J384nf
      PT3N0NAQe/bsYW5ujmw2S3t7O5lMBofDwfT0NHV1dfzy0jW+f7yfVGSF7/wvf0yJbTVDd+XK
      FdxuNxaLJZ9keeaZZwDo7u7G5/PxjW98g0uXLhGNRlf3WKwpAEVmdLCX/tFpGn6688IAAA0h
      SURBVFvb2dvaxL1kIYUAHl5kReH61DLvXhnnfP8sLdUOmmtKqK8opvYDM16RSU/Fx6wGU1NT
      DAwMYDQaaW9v5zvf+Q7f/OY3kWWZ06dPs7S0RHl5OSsrK7S2tlJdXY3T6dxQ2xRF4R+P93Gi
      a4L/9m9eyJvebgbOKpUq7zK9mT6XZRlJkm53za4lgIRnhHOjMYh5+MJTz+UzQBtFCODhJ53N
      MTbnZ3tt6V0tmiWTSd544w3q6uoIh8Nks1meffZZVCoVHo+Hq1evYjQamZmZQVEUioqKePHF
      FzecpFgJJ5hxB2lvrrin6dZN1jyjnAzTI32MjQzzyiuvEhEl7AuCSCTC0tISsizny8joNGp2
      bnOy4vcRi8UIh8N5C/papeB9Ph/79+9nbm4ORVHo7u5mcXGRUCjEiRMnaG9v58iRIzQ1NVFT
      U4PJZLpjKUtFUVheXiYQCJBOp1lYWCCdTuMoMrK7wcnS4iLZbBafz4csy/l08N3y0FaGE2wu
      iqIwMjLC4uIiVqsVlUrF6OgoL7/8MuFwmJGREebm5vK2E4vFkt9I81Gi0Wh+7cZoNBKJRNDr
      9cTjcRYXFwHyyQmtVovP56O6unqtJgGr99C1a9e4ceMGR48exev1srS0xAsvvMD4+DjBYJCp
      qSl0Oh02mw2TycSBAwfu2jmw7rgTWJqkb9LP3j1t2KwmtsCWYMF9RJIkiouLOXPmDF/72tcY
      HR3Nz5ttNhuKotDU1MTc3BxutxtFUYhGozz//PO3HMdisdDW1pb//Wb6WafT3bKaf/P1O938
      sOqpUqlU+X0A77//fj79Wl1dzcjICJ2dnVy+fBmfz5cvRdPZ2bnuMXO5HCdPnlxdRFzvTcXl
      dVjkFb7zD//AO6cukBNPO/1MoygKc3NzNDQ0cP36dTKZTL4i3dDQEMPDw2g0Gp555hmam5s3
      HLjeKzf3LGu1WiYmJigrK2NlZQWPx8Nbb72FRqPBYDDw2GOPsW/fvvzDUu6EWq2mvr5+tcDy
      elOgwOIE569N0tJUT2mJHbt943sCxBTo4UFRFFKpVP6ZxfF4HK1Wm1/HSSQSebftzZpFN6tX
      3O92xePxvNM2Ho9jNpvJ5XLIskw6nc5vurlZJe7mNG09ZFkmEolw8uTJ9adAiYifhaUFSEep
      eO4r97QhRvDwcNOyfROL5db05sdv9E+rY5MkCbP5w400N02JN7//o20G7sq1m8vluHz5Mg6H
      Y/0RIOpfZHLOw+jUPM9/+cuYPpBKIuxjaHyOqvpmyu0WfO55Fj0+nFX1xHxzJBQDu3asbnQW
      I4Bgq7PmCJAMeXj97ZPkZFBrDeRyH75zdnGZvR3tjIyMUW7fjqOklEAoTDIRJKsUYZMSxBQF
      4wduPIFgK7OmAAy2cl7+7a9y7kIXbTu2Y/jIdkiVJJFKp/I9PEiYzUaC8QTIWjKSjAoJlUoS
      D4EWbHnWjQGCS5OMT03j9yzx9Fe/gf2DkjJNzc3Mzy/Q2NRELBZFI8kk0tDY0EwqEiCFDpPq
      wxJ94rE8gq3MOgJQCMUyaOQ01a2P5G9+WC2YVVO7anvWfhCQNFpX87t6+6f/bC6B4Ndhze45
      tTLD+Iqa3//DP0T2ThB6ME8dFQjuO2uOAKl4jPEbPXgm+0jGgjQfBts9lEURCLY6wgskKGjW
      jVBX5scY3+ADnAWCh411BSCpJN76px/yTz99naiIAQSfUdYVgN5kxVlRyf7dO1GJWYzgM8qd
      nxKZTtH3sadECgSfJdYNghU5x+z0JGqTneqKe8vviyBYsNVZ1wt04f0rTC74MBlN/OZXX8Z6
      fx8uIhA8ENb1AnXsbCSUM7F/dwuGj7wrHQ8xNDpNTWMLDquRoM/N3KIXV10jKwsTpFQmdm2/
      /ZlVAsFWZF0vUCadRqMCt8dDeWUNN93gUzOL7NzdxtjoBI7W7ZhtJTTqVMx5Aywve6ms3wmQ
      rz8pHKGCrcy6AtDqdIyPDqNWGsl99B6WQK1S5esExUM+FgNJWhrraGmsYuxaH9HqCsx8KAKB
      YKuyrgCKXQ186WmFdI5bng9WW1nGtd4+quubCQQC+H1+shkFXyDAysICKa0B8wePqVEURQTB
      gi3NHUsjvnFhiKoSG0eee5HiewiCRRZIsNVZdx2gyFnN4X17SCvqe64MJxBsddZ2gwZmmY9Z
      2bO3gyKdREbEsYLPKGuOACqNjv6uS4yODtN7Y/KenhEsEDwMrBsDRALLTM4usq1pOzbzvZW+
      FjGAYKvzifsB0qkkGp0BlSiPLvgMsu7kJptK4PV66bp0Fl9E+KEFn03WFYBv7joXugaYn1/i
      3RPvkhaBsOAzyLoCMNucZOIhFK2FHQ01ojq04DPJuivBORkaWlrp2LUdtVolBCD4TLLuCGAr
      q0Gf9PBX/+W/EEx+mk0SCD491s0CBT0z9I4u0tbagsNRkl8LCLjnmFz0UlJex7aqUnzuORY9
      PiyOSmK+GRKKkQMdu0RxXMFDwZpToFw6zo3hcebHhpiY9fA7v/1iXgCeUIzOjk5GRkeAUkrK
      q0kk4ki6NBljNSVSlIiiYJZlcrmccIMKtjRrCiATDzK54EWnhrrdnRg+UhpeR45QNEJWXu3Z
      F6bH0BdX4izWM+CZQCFDiSSh/qAmqBgBBFuZ9fcEKwqZVJzBgQFa2g9h+aAynJzLMDkxTU1D
      A/FImHQ8jHclTFllLdpcjCQGXE4HkiQWwgRbH1EZTlDQCJuboKARAhAUNEIAgoJGCEBQ0AgB
      CAoaIQBBQSMEIChohAAEBY0QgKCg2bAAMskogwODhOMpALLpBGOT06AoTIxcZ2B4XBjgBA8N
      626IWY/p6VmatjczOTHNztbtJJMpwuEQCjC/ME9DayfwYV1QIQbBVmbDApBRodPq8lUiLEXF
      6LXzABw5+jQjPb3EykswisrQgoeADQugutzBtd5eXLWNBAIBcqkoK/4VFr1eQh4PSbUOkySh
      EnZowUOAcIMKChqRBRIUNEIAgoJGCEBQ0AgBCAoaIQBBQSMEIChohAAEBY0QgKCgEQIQFDRC
      AIKCZsMCCPsW6e7pYc6zAqw+S+xSVy+KonCjv4ee/hvCASp4aNiwGW7JH6azo4OR0VEod2Aq
      clBk8gAx1LpyyqUYUUXBJIrjCh4CNiwAtZIjloiTk1f90B+a3bSkM1FiUoYSJNRq4QYVbH02
      LID6xkbGxqepb/jQDp1JZ1j0RikvMZLAjl4Sz5MRPBwIO7SgoBFZIEFBIwQgKGiEAAQFjRCA
      oKARAhAUNEIAgoJGCEBQ0AgBCAoaIQBBQbNhAeQyCYaHhoilMgCkExGGhkdJZXJMjw+L4riC
      h4oNC2BqYpLqbXVMT04BMDExzbYaJ5PTi8wvLFLmLAXhBRI8JGzYDJeT1JgNRtSq1V5epdFh
      MBpRyUEOHHqUsf7rWOwdGBRF2KEFW54Nm+HCviXGZpcor9qGWSeRjYeY86xQ3dCIb3aGWEah
      s3MPakkSZjjBlke4QQUFjcgCCQoaIQBBQSMEIChohAAEBY0QgKCgEQIQFDRCAIKCZsMrwSvu
      WaYWl3GU11Jf5WRpZowlf5jy2mb8s8MkMbC/YzcqYYcQPARseATwhuLs69xHKuoHIJyQ6ezY
      RdQ3jd5UTY3ZQFS4HwQPCRsWgI4cgXCIrLy6wqtkUkTCYWRtEalUkGAqiUF0/oKHhA1bIRQ5
      y+TENDX1DcQiIWxWExPTCzQ01BP2u0lioKLUjiQJK4Rg63NfvECKoiDLMrIs558YLxBsRe6b
      AD7+u/SxoPhuXwPWFNJGPn8/3vtpfv7TOv9P8/pt5L3rdaS/znndfO2+ukE3i0IfScT537/z
      fygEIBDcL7Zct7K8OEt/fz+RRIqx4etMzbnJpuIMDI2CnGbo+iBdXT0ksrkH3dT7QmTFy8DA
      AN5AhPmpMYbHppFzGa5fv04mp7A0N0n/wCCJjPygm3pfSMfDDA4OMLvoxbc0R//gEFlZYWZ0
      kEA8S2B5kf7+AaLJ7KZ835YTQLGzgjpXEdNjU+hsFWTCK8SyOXLZJKh0tO5sw2oxoFNvuaZv
      Cgarnab6KvzLS4TjKixSmkAsgazkyMoyvpUwJRY1y4H4g27qfUGlM9LS3ERoZRlvIEZzTTEz
      s150GplQIseiJ8DOlhomp+Y25/s25SibSMC7iDempb7KhkqlRq1SYTRb0XwwB4yHvOisTtSf
      0ZXmZGSFyYUVmptq8uev1hsx6TSgyEiSRDKroJI3pwfcaijZJMMjEzRvb0ElqVBpNEgqNVaT
      AYDKcjvDYxPkNmkCsMUEoODz+UlGAmQ0FiLeWXJ6E1HPAsFgkLmlZcKxDLVVpQ+6ofcN37IP
      OZ1g2Z9Cp47jS8pokmG8vgAzc0uYjTpi8QwWq/FBN/W+EPItk1EUltx+bGYNN8bclJcamZz3
      sbwwTSarkFN0tDRVb8r3iSBYUNBssRFAIPh0EQIQFDRCAIKCRghAUNAIAQgKGiEAQUEjBCAo
      aIQABAWNEICgoPn/AbF8UMci8P9aAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      NAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='70' name='Total Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Airline Delay (2017 - 2022)' width='192'>
      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
      9fURjUaxbZsnnniCvXv3YpomHR0dVXXl83n+6Z/+iS1btqAoCq7rsm/fPn70ox8xMzPDxo0b
      EfPuFadOneLHP/4x27dvD65BhT996qmneO6551AUhebmZr72ta9x8OBBXnrpJY4cOcLNN9/M
      9PQ03//+9zl48CBtbW00NTVdk8lzXZe9e/ei6zqpVArHcXj22Wd5+umnOX/+PBs2bEAIwbPP
      PsszzzzDhQsX2LBhA7quL5jXvXv3Mjo6Sl9fH9PT0zzyyCMcPnyYV155hZtuuomhoSEef/xx
      Dhw4gKIodHV1Vc3F0NAQ3/72txkbG2Pz5s0IISgWi3zve99j//79NDc3k06nKZVKwbVUKkVL
      S8s1mQvLsnjsscfYsGEDmnZFtzIwMMATTzzB7t278TyPv//7v2f//v289NJLdHV1kUqlgrKe
      5/HMM8/w9NNP4zgOvb29AFy8eJFjx46xbt06ACYnJ3n00Uc5fPgwbW1tC+rw15GqqnR2dgbz
      NDo6yqOPPsqNN954Ze7kCmDbtnz55ZelZVlycnJS/s3f/I20LEv+5V/+pczlcnJyclJ+/OMf
      l57nyS9/+cvy1KlT0rZtOTo6WlXPyMiIfOSRR+Rf//Vfy1KpJKWU8rXXXpOHDh2SjuPIJ598
      Ur7wwgtSSilLpZJ88MEH5UMPPSQ9z6uq55vf/KZ89dVX67aRz+eDZx5//HE5OTkp8/m8/Ou/
      /uuVDLkhHMeRX/va1+TnP/95efjwYSmllLlcTh47dkw6jiPPnz8vv/jFL8q5uTl54sQJ6TiO
      PH36tPzKV76yoK5Lly7Jr3zlK/JrX/ualFLKf/u3f5NHjhypKnPy5Ek5MzMjLcuSn/nMZ+T4
      +Hhwr1QqyU984hMyl8vJvXv3yieffFK6risffPBBOTg4KMvlspyYmJCe58kHH3xQDgwMyHK5
      XFXH60E2m5Vf+MIX5F/91V/J2dnZ4LplWfLhhx+Wn/rUp6TrunJubk5+/etfr1uH53ny0Ucf
      lQcPHpSu68rh4WHpeZ7cu3evfPTRR+VnP/vZoNzHP/5xOTk5KbPZrPyrv/oraVlWUM/evXvl
      008/LW3bll/60pfkuXPnpJRSuq4rH3roIfnpT39a2rYdXFsRC6RpGps3b+aFF17gRz/6Effc
      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
    </thumbnail>
  </thumbnails>
</workbook>
